// –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
// –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏

import {
  getUserProgress,
  updateTopicProgress,
  markBlockCompleted,
  saveTestResult,
  addStudyTime,
} from "./progressStorage";
import { logEvent, getEvents, getStreakDays } from "./analytics";

// –ü—Ä–∏–º–µ—Ä 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑—É—á–∞–µ—Ç —Ç–µ–º—É –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å
export async function exampleUserProgress() {
  console.log("üìö –ü–†–ò–ú–ï–† 1: –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
  console.log("=".repeat(50));

  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑—É—á–∞–µ—Ç —Ç–µ–º—É "money"
  await updateTopicProgress("money", {
    completedBlocks: 3,
    totalBlocks: 5,
    studyTime: 25 * 60 * 1000, // 25 –º–∏–Ω—É—Ç
  });

  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∞–µ—Ç –±–ª–æ–∫
  await markBlockCompleted("money", 3, 5);

  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç–µ—Å—Ç
  await saveTestResult("money", 8, 10); // 8 –∏–∑ 10 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö

  // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const progress = await getUserProgress();

  console.log("üìä –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –ü–†–û–ì–†–ï–°–°–ê:");
  console.log("- –¢–µ–º–∞: money");
  console.log(
    "- –ó–∞–≤–µ—Ä—à–µ–Ω–æ –±–ª–æ–∫–æ–≤:",
    progress.topics.money?.completedBlocks || 0,
    "–∏–∑",
    progress.topics.money?.totalBlocks || 0
  );
  console.log(
    "- –í—Ä–µ–º—è –∏–∑—É—á–µ–Ω–∏—è:",
    Math.round((progress.topics.money?.studyTime || 0) / 60000),
    "–º–∏–Ω—É—Ç"
  );
  console.log("- –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:", progress.testScores.money || 0, "–∏–∑ 10");
  console.log(
    "- –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:",
    (
      ((progress.topics.money?.completedBlocks || 0) /
        (progress.topics.money?.totalBlocks || 1)) *
      100
    ).toFixed(1) + "%"
  );

  // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  const completionRate =
    (progress.topics.money?.completedBlocks || 0) /
    (progress.topics.money?.totalBlocks || 1);
  const testScore = (progress.testScores.money || 0) / 10;

  console.log("\nüß† –ê–ù–ê–õ–ò–ó –ü–ï–†–°–û–ù–ê–õ–ò–ó–ê–¶–ò–ò:");
  console.log(
    "- –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–º—ã:",
    (completionRate * 100).toFixed(1) + "%"
  );
  console.log("- –£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å –≤ —Ç–µ—Å—Ç–∞—Ö:", (testScore * 100).toFixed(1) + "%");

  if (completionRate > 0.5 && testScore > 0.7) {
    console.log(
      "- –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–∑—É—á–µ–Ω–∏–µ —Ç–µ–º—ã (—Ö–æ—Ä–æ—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã)"
    );
  } else if (testScore < 0.6) {
    console.log(
      "- –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª (–Ω–∏–∑–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ç–µ—Å—Ç–µ)"
    );
  } else {
    console.log("- –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ç–µ–º—É");
  }
}

// –ü—Ä–∏–º–µ—Ä 2: –ê–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function exampleUserEvents() {
  console.log("\nüìà –ü–†–ò–ú–ï–† 2: –ê–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
  console.log("=".repeat(50));

  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
  await logEvent("topic_progress_updated", {
    topicId: "money",
    updates: { completedBlocks: 4 },
  });
  await logEvent("block_completed", { topicId: "money", blockIndex: 4 });
  await logEvent("test_result_saved", {
    topicId: "money",
    score: 9,
    totalQuestions: 10,
  });
  await logEvent("study_session_started", {
    topicId: "money",
    timestamp: Date.now(),
  });
  await logEvent("study_session_ended", {
    topicId: "money",
    duration: 30 * 60 * 1000,
  });

  // –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è
  const events = await getEvents();
  const streakDays = await getStreakDays();

  console.log("üìä –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –°–û–ë–´–¢–ò–ô:");
  console.log("- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π:", events.length);
  console.log("- Streak –¥–Ω–µ–π:", streakDays);
  console.log("- –¢–∏–ø—ã —Å–æ–±—ã—Ç–∏–π:", [...new Set(events.map((e) => e.type))]);

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
  const weekAgo = Date.now() - 7 * 24 * 60 * 60 * 1000;
  const recentEvents = events.filter(
    (e) => new Date(e.timestamp) > new Date(weekAgo)
  );

  console.log("\nüìÖ –ê–ù–ê–õ–ò–ó –ê–ö–¢–ò–í–ù–û–°–¢–ò:");
  console.log("- –°–æ–±—ã—Ç–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é:", recentEvents.length);
  console.log(
    "- –°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:",
    (recentEvents.length / 7).toFixed(1),
    "—Å–æ–±—ã—Ç–∏–π –≤ –¥–µ–Ω—å"
  );

  // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ
  const isActiveUser = recentEvents.length > 5;
  const hasGoodStreak = streakDays > 3;

  console.log("\nüß† –ü–ï–†–°–û–ù–ê–õ–ò–ó–ê–¶–ò–Ø –ù–ê –û–°–ù–û–í–ï –ê–ö–¢–ò–í–ù–û–°–¢–ò:");
  if (isActiveUser && hasGoodStreak) {
    console.log(
      "- –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ (–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)"
    );
  } else if (!isActiveUser) {
    console.log(
      "- –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ù–∞–ø–æ–º–Ω–∏—Ç—å –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –æ–±—É—á–µ–Ω–∏—è (–Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)"
    );
  } else {
    console.log("- –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ç–µ–º–ø");
  }
}

// –ü—Ä–∏–º–µ—Ä 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–µ–º
export async function exampleMultipleTopics() {
  console.log("\nüìö –ü–†–ò–ú–ï–† 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–µ–º");
  console.log("=".repeat(50));

  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑—É—á–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–º
  await updateTopicProgress("money", {
    completedBlocks: 4,
    totalBlocks: 5,
    studyTime: 30 * 60 * 1000,
  });
  await saveTestResult("money", 9, 10);

  await updateTopicProgress("market", {
    completedBlocks: 2,
    totalBlocks: 4,
    studyTime: 20 * 60 * 1000,
  });
  await saveTestResult("market", 7, 10);

  await updateTopicProgress("law", {
    completedBlocks: 1,
    totalBlocks: 3,
    studyTime: 10 * 60 * 1000,
  });
  await saveTestResult("law", 5, 10);

  const progress = await getUserProgress();

  console.log("üìä –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –ü–û –¢–ï–ú–ê–ú:");

  const topicAnalysis = Object.entries(progress.topics).map(
    ([topicId, topic]) => ({
      topicId,
      completionRate:
        ((topic.completedBlocks / topic.totalBlocks) * 100).toFixed(1) + "%",
      studyTime: Math.round(topic.studyTime / 60000) + " –º–∏–Ω",
      testScore: progress.testScores[topicId] || 0,
      efficiency: (
        (progress.testScores[topicId] || 0) /
        (topic.studyTime / 60000)
      ).toFixed(2),
    })
  );

  topicAnalysis.forEach((topic) => {
    console.log(
      `- ${topic.topicId}: ${topic.completionRate} –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, ${topic.studyTime} –∏–∑—É—á–µ–Ω–∏—è, ${topic.testScore}/10 –≤ —Ç–µ—Å—Ç–µ, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ${topic.efficiency}`
    );
  });

  // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Ç–µ–º—ã
  const sortedTopics = Object.entries(progress.testScores).sort(
    ([, a], [, b]) => b - a
  );
  const strongTopics = sortedTopics.slice(0, 2).map(([topicId]) => topicId);
  const weakTopics = sortedTopics.slice(-2).map(([topicId]) => topicId);

  console.log("\nüß† –ê–ù–ê–õ–ò–ó –ü–ï–†–°–û–ù–ê–õ–ò–ó–ê–¶–ò–ò:");
  console.log("- –°–∏–ª—å–Ω—ã–µ —Ç–µ–º—ã:", strongTopics.join(", "));
  console.log("- –°–ª–∞–±—ã–µ —Ç–µ–º—ã:", weakTopics.join(", "));

  console.log("\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:");
  console.log("- –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ç–µ–º—ã 'money' (—Å–∏–ª—å–Ω–∞—è —Ç–µ–º–∞)");
  console.log(
    "- –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É –ø–æ —Ç–µ–º–µ 'law' (—Å–ª–∞–±–∞—è —Ç–µ–º–∞)"
  );
  console.log("- –£—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏–∑—É—á–µ–Ω–∏—è –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏");
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
export async function runAllExamples() {
  console.log("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ï–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–• –í –ü–ï–†–°–û–ù–ê–õ–ò–ó–ê–¶–ò–ò");
  console.log("=".repeat(60));

  await exampleUserProgress();
  await exampleUserEvents();
  await exampleMultipleTopics();

  console.log("\n‚úÖ –í–°–ï –ü–†–ò–ú–ï–†–´ –ó–ê–í–ï–†–®–ï–ù–´!");
  console.log(
    "–¢–µ–ø–µ—Ä—å –≤—ã –≤–∏–¥–∏—Ç–µ –∫–∞–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:"
  );
  console.log("- –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Ç–µ–º–∞–º");
  console.log("- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤");
  console.log("- –í—Ä–µ–º—è –∏–∑—É—á–µ–Ω–∏—è");
  console.log("- –°–æ–±—ã—Ç–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏");
  console.log("- Streak –¥–Ω–µ–π");
  console.log("- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ —Ç–µ–º–∞–º");
}

