import React, { useState } from "react";
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  ScrollView,
  StatusBar,
} from "react-native";
import { SafeAreaView } from "react-native-safe-area-context";
import { LinearGradient } from "expo-linear-gradient";
import { colors } from "../constants/colors";
import { getTopicProgress, getUserProgress } from "../utils/progressStorage";
import {
  computeStartBlockIndex,
  getLastStudiedTopicIdFromUserProgress,
} from "../utils/progressHelpers";
import { NavigationProp } from "@react-navigation/native";
import { NavigationParams, Section } from "../types";
import { SECTIONS, SECTION_COLORS } from "../constants/sections";
import { mockUserProgress, moneyTopic } from "../data";
import { getTopicWithCache } from "../content/loader";
import { getTopicFallback } from "../content/index";

interface HomeScreenProps {
  navigation: NavigationProp<NavigationParams, "Home">;
}

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞

export const HomeScreen: React.FC<HomeScreenProps> = ({ navigation }) => {
  const [sections] = useState<Section[]>([
    {
      id: "person-society",
      title: "–ß–µ–ª–æ–≤–µ–∫ –∏ –æ–±—â–µ—Å—Ç–≤–æ",
      description:
        "–ò–∑—É—á–∞–µ–º –ø—Ä–∏—Ä–æ–¥—É —á–µ–ª–æ–≤–µ–∫–∞, –µ–≥–æ –º–µ—Å—Ç–æ –≤ –æ–±—â–µ—Å—Ç–≤–µ –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã",
      icon: "üë§",
      order: 1,
      topics: [],
      isCompleted: false,
      progress: 60,
    },
    {
      id: "economy",
      title: "–≠–∫–æ–Ω–æ–º–∏–∫–∞",
      description:
        "–û—Å–Ω–æ–≤—ã —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π —Ç–µ–æ—Ä–∏–∏, —Ä—ã–Ω–æ–∫, –¥–µ–Ω—å–≥–∏, –±–∞–Ω–∫–∏ –∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞",
      icon: "üí∞",
      order: 2,
      topics: [],
      isCompleted: true,
      progress: 100,
    },
    {
      id: "social-relations",
      title: "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
      description:
        "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –≥—Ä—É–ø–ø—ã, —Å–µ–º—å—è, –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞",
      icon: "üë•",
      order: 3,
      topics: [],
      isCompleted: false,
      progress: 30,
    },
    {
      id: "politics",
      title: "–ü–æ–ª–∏—Ç–∏–∫–∞",
      description:
        "–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞, –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ, –≤—ã–±–æ—Ä—ã, –ø–∞—Ä—Ç–∏–∏ –∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –æ–±—â–µ—Å—Ç–≤–æ",
      icon: "üèõÔ∏è",
      order: 4,
      topics: [],
      isCompleted: false,
      progress: 0,
    },
    {
      id: "law",
      title: "–ü—Ä–∞–≤–æ",
      description:
        "–ü—Ä–∞–≤–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞, –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏—è –†–§, –ø—Ä–∞–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞ –∏ —Å—É–¥–µ–±–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
      icon: "‚öñÔ∏è",
      order: 5,
      topics: [],
      isCompleted: false,
      progress: 0,
    },
    {
      id: "spiritual-culture",
      title: "–î—É—Ö–æ–≤–Ω–∞—è –∫—É–ª—å—Ç—É—Ä–∞",
      description: "–ö—É–ª—å—Ç—É—Ä–∞, –º–æ—Ä–∞–ª—å, —Ä–µ–ª–∏–≥–∏—è, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –Ω–∞—É–∫–∞ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–æ",
      icon: "üé®",
      order: 6,
      topics: [],
      isCompleted: false,
      progress: 0,
    },
  ]);

  const handleSectionPress = async (section: Section) => {
    // –î–ª—è –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–º—É "–î–µ–Ω—å–≥–∏"
    const fallback = getTopicFallback("money") || {
      id: "money",
      sectionId: section.id,
      title: "–î–µ–Ω—å–≥–∏",
      description: "–ò–∑—É—á–∞–µ–º –ø—Ä–∏—Ä–æ–¥—É –¥–µ–Ω–µ–≥, –∏—Ö —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–æ–ª—å –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ",
      coverImage:
        "https://images.unsplash.com/photo-1563013544-824ae1b704d3?w=800",
      order: 1,
      gradeLevel: 9,
      isPremium: false,
      contentBlocks: moneyTopic.contentBlocks,
      quiz: moneyTopic.quiz,
      isCompleted: false,
      progress: 0,
      bestScore: 0,
      totalBlocks: moneyTopic.contentBlocks.length,
      completedBlocks: 0,
      estimatedTime: 20,
      difficulty: "medium",
      learningObjectives: [
        "–ü–æ–Ω—è—Ç—å —á—Ç–æ —Ç–∞–∫–æ–µ –¥–µ–Ω—å–≥–∏ –∏ –∏—Ö —Ä–æ–ª—å –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ",
        "–ò–∑—É—á–∏—Ç—å 5 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–µ–Ω–µ–≥",
        "–†–∞–∑–ª–∏—á–∞—Ç—å –≤–∏–¥—ã –¥–µ–Ω–µ–≥ –∏ –∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏",
      ],
    };

    const loaded = await getTopicWithCache("money", fallback as any);

    navigation.navigate("Topic", { topic: loaded });
  };

  const handleProfilePress = () => {
    navigation.navigate("Profile");
  };

  const handleStatisticsPress = () => {
    navigation.navigate("Statistics");
  };

  const handleSearchPress = () => {
    navigation.navigate("Search");
  };

  const handleContinuePress = async () => {
    const userProgress = await getUserProgress();
    const lastTopicId =
      getLastStudiedTopicIdFromUserProgress(userProgress) || "money";
    const progress = await getTopicProgress(lastTopicId);
    const blockIndex = computeStartBlockIndex(progress);
    const fallback = getTopicFallback(lastTopicId) || {
      id: lastTopicId,
      sectionId: "economy",
      title: "–î–µ–Ω—å–≥–∏",
      description: "–ò–∑—É—á–∞–µ–º –ø—Ä–∏—Ä–æ–¥—É –¥–µ–Ω–µ–≥, –∏—Ö —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–æ–ª—å –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ",
      coverImage:
        "https://images.unsplash.com/photo-1563013544-824ae1b704d3?w=800",
      order: 1,
      gradeLevel: 9,
      isPremium: false,
      contentBlocks: moneyTopic.contentBlocks,
      quiz: moneyTopic.quiz,
      isCompleted: false,
      progress: 0,
      bestScore: 0,
      totalBlocks: moneyTopic.contentBlocks.length,
      completedBlocks: 0,
      estimatedTime: 20,
      difficulty: "medium",
      learningObjectives: [
        "–ü–æ–Ω—è—Ç—å —á—Ç–æ —Ç–∞–∫–æ–µ –¥–µ–Ω—å–≥–∏ –∏ –∏—Ö —Ä–æ–ª—å –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ",
        "–ò–∑—É—á–∏—Ç—å 5 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–µ–Ω–µ–≥",
        "–†–∞–∑–ª–∏—á–∞—Ç—å –≤–∏–¥—ã –¥–µ–Ω–µ–≥ –∏ –∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏",
      ],
    };
    const loaded = await getTopicWithCache(lastTopicId, fallback as any);
    navigation.navigate("TheoryBlock", { topic: loaded as any, blockIndex });
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar barStyle="dark-content" backgroundColor={colors.background} />

      {/* –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º */}
      <View style={styles.header}>
        <TouchableOpacity
          style={styles.backButton}
          onPress={() => navigation.navigate("Welcome")}
        >
          <Text style={styles.backButtonText}>‚Üê –ù–∞–∑–∞–¥</Text>
        </TouchableOpacity>
        <View style={styles.progressContainer}>
          <LinearGradient
            colors={colors.gradients.primary}
            style={styles.progressCard}
          >
            <View style={styles.progressHeader}>
              <Text style={styles.progressTitle}>–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å</Text>
              <View style={styles.headerButtons}>
                <TouchableOpacity
                  onPress={handleStatisticsPress}
                  style={styles.headerButton}
                >
                  <Text style={styles.headerButtonText}>üìä</Text>
                </TouchableOpacity>
                <TouchableOpacity
                  onPress={handleProfilePress}
                  style={styles.headerButton}
                >
                  <Text style={styles.headerButtonText}>üë§</Text>
                </TouchableOpacity>
              </View>
            </View>

            <View style={styles.progressStats}>
              <View style={styles.statItem}>
                <Text style={styles.statNumber}>
                  {mockUserProgress.completedSections}
                </Text>
                <Text style={styles.statLabel}>
                  –∏–∑ {mockUserProgress.totalSections} —Ä–∞–∑–¥–µ–ª–æ–≤
                </Text>
              </View>
              <View style={styles.statItem}>
                <Text style={styles.statNumber}>{mockUserProgress.xp}</Text>
                <Text style={styles.statLabel}>XP</Text>
              </View>
              <View style={styles.statItem}>
                <Text style={styles.statNumber}>{mockUserProgress.streak}</Text>
                <Text style={styles.statLabel}>–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</Text>
              </View>
            </View>
            {/* CTA Continue */}
            <TouchableOpacity
              onPress={handleContinuePress}
              style={{
                marginTop: 12,
                alignSelf: "flex-end",
                backgroundColor: "rgba(255,255,255,0.15)",
                paddingHorizontal: 14,
                paddingVertical: 8,
                borderRadius: 12,
              }}
            >
              <Text style={{ color: "white", fontWeight: "600" }}>
                –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚ñ∂
              </Text>
            </TouchableOpacity>
          </LinearGradient>
        </View>
      </View>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <ScrollView
        style={styles.content}
        contentContainerStyle={styles.scrollContent}
        showsVerticalScrollIndicator={false}
      >
        <View style={styles.sectionsContainer}>
          <View style={styles.sectionsHeader}>
            <Text style={styles.sectionsTitle}>–†–∞–∑–¥–µ–ª—ã –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏—è</Text>
            <TouchableOpacity onPress={handleSearchPress}>
              <Text style={styles.searchButton}>üîç</Text>
            </TouchableOpacity>
          </View>

          {sections.map((section) => (
            <TouchableOpacity
              key={section.id}
              style={styles.sectionCard}
              onPress={() => handleSectionPress(section)}
              activeOpacity={0.8}
            >
              <LinearGradient
                colors={[
                  SECTION_COLORS[section.id as keyof typeof SECTION_COLORS],
                  `${
                    SECTION_COLORS[section.id as keyof typeof SECTION_COLORS]
                  }CC`,
                ]}
                style={styles.sectionGradient}
              >
                <View style={styles.sectionContent}>
                  <View style={styles.sectionHeader}>
                    <Text style={styles.sectionIcon}>{section.icon}</Text>
                    <View style={styles.sectionInfo}>
                      <Text style={styles.sectionTitle}>{section.title}</Text>
                      <Text style={styles.sectionDescription}>
                        {section.description}
                      </Text>
                    </View>
                    {section.isCompleted && (
                      <Text style={styles.completedIcon}>‚úÖ</Text>
                    )}
                  </View>

                  {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
                  <View style={styles.progressBarContainer}>
                    <View style={styles.progressBar}>
                      <View
                        style={[
                          styles.progressFill,
                          {
                            width: `${section.progress}%`,
                            backgroundColor: colors.textLight,
                          },
                        ]}
                      />
                    </View>
                    <Text style={styles.progressText}>{section.progress}%</Text>
                  </View>
                </View>
              </LinearGradient>
            </TouchableOpacity>
          ))}
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: colors.background,
  },
  header: {
    paddingHorizontal: 20,
    paddingTop: 20,
    paddingBottom: 10,
  },
  progressContainer: {
    borderRadius: 16,
    overflow: "hidden",
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 4,
  },
  progressCard: {
    padding: 20,
  },
  progressHeader: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 16,
  },
  progressTitle: {
    fontSize: 18,
    fontWeight: "bold",
    color: colors.textLight,
  },
  profileButton: {
    fontSize: 24,
  },
  progressStats: {
    flexDirection: "row",
    justifyContent: "space-between",
  },
  statItem: {
    alignItems: "center",
  },
  statNumber: {
    fontSize: 20,
    fontWeight: "bold",
    color: colors.textLight,
  },
  statLabel: {
    fontSize: 12,
    color: colors.textLight,
    opacity: 0.8,
    textAlign: "center",
  },
  content: {
    flex: 1,
  },
  scrollContent: {
    paddingHorizontal: 20,
    paddingBottom: 20,
  },
  sectionsContainer: {
    gap: 16,
  },
  sectionsHeader: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 8,
  },
  sectionsTitle: {
    fontSize: 20,
    fontWeight: "bold",
    color: colors.text,
  },
  searchButton: {
    fontSize: 24,
  },
  sectionCard: {
    borderRadius: 16,
    overflow: "hidden",
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  sectionGradient: {
    padding: 20,
  },
  sectionContent: {
    gap: 16,
  },
  sectionHeader: {
    flexDirection: "row",
    alignItems: "center",
  },
  sectionIcon: {
    fontSize: 32,
    marginRight: 16,
  },
  sectionInfo: {
    flex: 1,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: "bold",
    color: colors.text.light,
    marginBottom: 4,
  },
  sectionDescription: {
    fontSize: 14,
    color: colors.text.light,
    opacity: 0.9,
    lineHeight: 20,
  },
  completedIcon: {
    fontSize: 20,
  },
  progressBarContainer: {
    flexDirection: "row",
    alignItems: "center",
    gap: 12,
  },
  progressBar: {
    flex: 1,
    height: 6,
    backgroundColor: "rgba(255, 255, 255, 0.3)",
    borderRadius: 3,
    overflow: "hidden",
  },
  progressFill: {
    height: "100%",
    borderRadius: 3,
  },
  progressText: {
    fontSize: 12,
    fontWeight: "bold",
    color: colors.text.light,
    minWidth: 35,
  },
  backButton: {
    position: "absolute",
    left: 20,
    top: 20,
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 20,
    backgroundColor: colors.primary,
    zIndex: 10,
    elevation: 3,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 4,
  },
  backButtonText: {
    color: colors.textLight,
    fontSize: 16,
    fontWeight: "600",
  },
  headerButtons: {
    flexDirection: "row",
    gap: 10,
  },
  headerButton: {
    padding: 8,
    borderRadius: 15,
    backgroundColor: "rgba(255, 255, 255, 0.2)",
  },
  headerButtonText: {
    fontSize: 24,
    color: colors.textLight,
  },
});

export default HomeScreen;
