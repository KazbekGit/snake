# üß± –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
# –ï—Å—Ç—å –∫–ª–∞—Å—Å Logger, —É –Ω–µ–≥–æ –µ—Å—Ç—å –º–µ—Ç–æ–¥ log(message)

# –ù—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ö–æ—Ç—è –±—ã –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:

# ConsoleLogger ‚Äî –ø–µ—á–∞—Ç–∞–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å

# FileLogger ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Ñ–∞–π–ª

# –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –ª–æ–≥–≥–µ—Ä—ã, –Ω–µ –º–µ–Ω—è—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥

# üì¶ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# python
# –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
# logger = ConsoleLogger()
# logger.log("–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å...")

# logger = FileLogger("log.txt")
# logger.log("–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–∞–π–ª.")

from abc import ABC, abstractmethod


class LoggerType(ABC):
    @abstractmethod
    def log(self, message, level) -> None:
        pass


class Logger:
    def __init__(self, logger:LoggerType):
        self.logger = logger

    def log(self, message: str, level: str) -> None:
        self.logger.log(message, level)


class ConsoleLogger(LoggerType):
    def __init__(self):
        pass

    def log(self, message, level):
        print(f"{message} to Console")


class FileLogger(LoggerType):
    def __init__(self):
        pass

    def log(self, message, level):
        with open("text.txt", mode="w", encoding="utf-8") as f:
            f.write(message)


cns_logger = ConsoleLogger()
file_logger = FileLogger()

user_logger1 = Logger(cns_logger)
user_logger2 = Logger(file_logger)

user_logger1.log("–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å")
user_logger2.log("–ê —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º—ã –∑–∞–ø–∏—à–µ–º –≤ —Ñ–∞–π–ª")
